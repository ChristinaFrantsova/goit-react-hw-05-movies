{"version":3,"file":"static/js/439.6bb54ca4.chunk.js","mappings":"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","sources":["Api/api.js","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst USER_KEY = 'b24e2ced5e4c297e90eaecd2697881dc';\n\nconst getTrendingMovies = () => {\n  const url = axios.get(`${BASE_URL}/trending/movie/day?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getSearchMovie = query => {\n  const url = axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&query=${query}`\n  );\n  return url;\n};\n\nconst getMovieDetails = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieCast = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieReviews = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${USER_KEY}`);\n  return url;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 3px solid lightgray;\n`;\n\nexport const Img = styled.img`\n  max-width: 700px;\n  max-height: 500px;\n`;\n\nexport const Info = styled.div`\n  margin-left: 20px;\n  padding-left: 10px;\n  border: 5px solid #8690ca;\n  border-radius: 20px;\n`;\nexport const MainTitle = styled.h2`\n  font-size: 35px;\n  line-height: 1.2;\n`;\n\nexport const ScoreTitle = styled.p`\n  margin: 50px 0px 50px 0px;\n  font-size: 20px;\n  line-height: 1.2;\n`;\n\nexport const Title = styled.h3`\n  margin: 50px 0px 0px 0px;\n  line-height: 1.2;\n  padding-bottom: 5px;\n`;\n\nexport const AditionalTitle = styled.h3`\n  text-align: center;\n`;\n\nexport const LinkNav = styled(Link)`\n  background: inherit;\n  outline: none;\n  border: 1px solid #d3d3d3;\n  border-radius: 5px;\n  padding: 5px 15px;\n  color: inherit;\n  transition: all 0.3s ease;\n  text-decoration: none;\n  display: inline-block;\n  width: 60px;\n  height: 20px;\n  text-align: center;\n  margin-right: 20px;\n  margin-left: 20px;\n  &:hover {\n    background: linear-gradient(45deg, #8690ca, #404b80);\n    color: #bfc3d4;\n    background-size: cover;\n  }\n`;\n\nexport const Arrow = styled(Link)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: inherit;\n  outline: none;\n  border: 1px solid #d3d3d3;\n  border-radius: 5px;\n  padding: 5px 15px;\n  color: inherit;\n  transition: all 0.3s ease;\n  text-decoration: none;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n  margin-bottom: 10px;\n  &:hover {\n    background: linear-gradient(45deg, #8690ca, #404b80);\n    color: #bfc3d4;\n    background-size: cover;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { getMovieDetails } from 'Api/api';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { MdKeyboardDoubleArrowLeft } from 'react-icons/md';\nimport Loader from 'components/Loader/Loader';\nimport posterImg from '../images/posterImg.png';\nimport {\n  Div,\n  Img,\n  Info,\n  MainTitle,\n  ScoreTitle,\n  Title,\n  AditionalTitle,\n  LinkNav,\n  List,\n  Arrow,\n} from './MovieDetails.styled';\nconst baseURL = 'https://image.tmdb.org/t/p/original';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(movieId)\n      .then(response => setMovie(response.data))\n      // setMovie(response.data)\n      // console.log(response.data)\n      .catch(error => console.log(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n  //   console.log(genres);\n\n  return (\n    <>\n      <Arrow to={location.state?.from}>\n        <MdKeyboardDoubleArrowLeft\n          style={{ color: '#404b80', width: '30px', height: '30px' }}\n        />\n        <span>Go Back</span>\n      </Arrow>\n\n      {isLoading && <Loader />}\n      <Div>\n        <div>\n          <Img\n            src={poster_path ? baseURL + poster_path : posterImg}\n            alt={title}\n          />\n        </div>\n        <Info>\n          <MainTitle>\n            {title} ({release_date && release_date.slice(0, 4)})\n          </MainTitle>\n          <ScoreTitle>\n            <b>User score:</b> {Math.floor(vote_average * 10)}%\n          </ScoreTitle>\n          <Title>Overview</Title>\n          <p>{overview}</p>\n          <Title>Genres</Title>\n          <ul>\n            {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </ul>\n        </Info>\n      </Div>\n      <List>\n        <AditionalTitle>Aditional information:</AditionalTitle>\n        <li>\n          <LinkNav to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </LinkNav>\n        </li>\n        <li>\n          <LinkNav to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </LinkNav>\n        </li>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","USER_KEY","getTrendingMovies","axios","getSearchMovie","query","getMovieDetails","id","getMovieCast","getMovieReviews","Div","styled","Img","Info","MainTitle","ScoreTitle","Title","AditionalTitle","LinkNav","Link","Arrow","List","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","useEffect","then","response","data","catch","error","console","log","message","finally","poster_path","title","vote_average","overview","genres","release_date","to","state","from","style","color","width","height","Loader","src","posterImg","alt","slice","Math","floor","map","name"],"sourceRoot":""}