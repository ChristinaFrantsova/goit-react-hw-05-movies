{"version":3,"file":"static/js/241.dc5ab487.chunk.js","mappings":"sRAEMA,EAAW,+BACXC,EAAW,mCAEXC,EAAoB,WAExB,OADYC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,GAEjE,EAEKG,EAAiB,SAAAC,GAIrB,OAHYF,EAAAA,EAAAA,IAAA,UACPH,EADO,iCAC0BC,EAD1B,kBAC4CI,GAGzD,EAEKC,EAAkB,SAAAC,GAEtB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,GAE1D,EAEKO,EAAe,SAAAD,GAEnB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,4BAAqDN,GAElE,EAEKQ,EAAkB,SAAAF,GAEtB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,4BAAqDN,GAElE,C,+MC5BYS,EAAOC,EAAAA,EAAAA,GAAH,yJASJC,EAAOD,EAAAA,EAAAA,GAAH,kQAUJE,EAAMF,EAAAA,EAAAA,IAAH,+CAIHG,EAAQH,EAAAA,EAAAA,EAAH,oDAILI,EAAOJ,EAAAA,EAAAA,EAAH,oD,SCkBjB,EAvCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbZ,EAAAA,EAAAA,IAAaa,GACVG,MAAK,SAAAC,GAAQ,OAAIP,EAAQO,EAASC,KAAKT,KAA1B,IAGbU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IACXC,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,gCACGF,IAAa,SAACc,EAAA,EAAD,KACd,SAACvB,EAAD,UACGO,EAAKiB,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC/C,OACE,UAAC1B,EAAD,YACE,SAACC,EAAD,CACE0B,IAAKH,EAzBL,sCAyB8BA,EAAeI,EAC7CC,IAAKH,KAEP,UAACxB,EAAD,YACE,SAACC,EAAD,yBADF,IAC2BsB,MAE3B,UAACvB,EAAD,YACE,SAACC,EAAD,qBADF,IACuBuB,OATdH,EAad,QAIR,C","sources":["Api/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst USER_KEY = 'b24e2ced5e4c297e90eaecd2697881dc';\n\nconst getTrendingMovies = () => {\n  const url = axios.get(`${BASE_URL}/trending/movie/day?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getSearchMovie = query => {\n  const url = axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&query=${query}`\n  );\n  return url;\n};\n\nconst getMovieDetails = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieCast = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieReviews = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${USER_KEY}`);\n  return url;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  justify-content: center;\n  padding: 20px 0 20px;\n`;\n\nexport const Item = styled.li`\n  width: 180px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  transition: transform linear 250ms;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 3px;\n`;\n\nexport const Title = styled.p`\n  margin: 5px 0px 8px 3px;\n`;\n\nexport const Text = styled.b`\n  margin: 0px 0px 8px 3px;\n`;\n","import { getMovieCast } from 'Api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport profileImg from '../../images/profileImg.jpg';\nimport { List, Item, Img, Title, Text } from './Cast.styled';\nconst baseURL = 'https://image.tmdb.org/t/p/original';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCast(movieId)\n      .then(response => setCast(response.data.cast))\n      //   setCast(response.data.cast)\n      //   console.log(response.data.cast)\n      .catch(error => console.log(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <List>\n        {cast.map(({ credit_id, profile_path, character, name }) => {\n          return (\n            <Item key={credit_id}>\n              <Img\n                src={profile_path ? baseURL + profile_path : profileImg}\n                alt={name}\n              />\n              <Title>\n                <Text>Character:</Text> {character}\n              </Title>\n              <Title>\n                <Text>Actor:</Text> {name}\n              </Title>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\nexport default Cast;\n"],"names":["BASE_URL","USER_KEY","getTrendingMovies","axios","getSearchMovie","query","getMovieDetails","id","getMovieCast","getMovieReviews","List","styled","Item","Img","Title","Text","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","then","response","data","catch","error","console","log","message","finally","Loader","map","credit_id","profile_path","character","name","src","profileImg","alt"],"sourceRoot":""}