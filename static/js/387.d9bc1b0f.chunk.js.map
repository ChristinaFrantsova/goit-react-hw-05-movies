{"version":3,"file":"static/js/387.d9bc1b0f.chunk.js","mappings":"sRAEMA,EAAW,+BACXC,EAAW,mCAEXC,EAAoB,WAExB,OADYC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,GAEjE,EAEKG,EAAiB,SAAAC,GAIrB,OAHYF,EAAAA,EAAAA,IAAA,UACPH,EADO,iCAC0BC,EAD1B,kBAC4CI,GAGzD,EAEKC,EAAkB,SAAAC,GAEtB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,GAE1D,EAEKO,EAAe,SAAAD,GAEnB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,4BAAqDN,GAElE,EAEKQ,EAAkB,SAAAF,GAEtB,OADYJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,4BAAqDN,GAElE,C,oJC5BYS,EAAMC,EAAAA,EAAAA,IAAH,2DAKHC,EAAOD,EAAAA,EAAAA,GAAH,wHAOJE,EAAQF,EAAAA,EAAAA,GAAH,mIAOLG,EAAOH,EAAAA,EAAAA,EAAH,wE,SCqBjB,EApCgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbV,EAAAA,EAAAA,IAAgBW,GACbG,MAAK,SAAAC,GAAQ,OAAIP,EAAWO,EAASC,KAAKC,QAA7B,IAGbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,IACXC,SAAQ,kBAAMb,GAAa,EAAnB,GACZ,GAAE,CAACC,IAEmB,IAAnBJ,EAAQiB,QACH,oEAIP,UAACvB,EAAD,WACGQ,IAAa,SAACgB,EAAA,EAAD,KACd,wBACGlB,EAAQmB,KAAI,YAA8B,IAA3B5B,EAA0B,EAA1BA,GAAI6B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACzB,EAAD,YACE,SAACC,EAAD,UAAQuB,KACR,SAACtB,EAAD,UAAOuB,MAFE9B,EAKd,QAIR,C","sources":["Api/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst USER_KEY = 'b24e2ced5e4c297e90eaecd2697881dc';\n\nconst getTrendingMovies = () => {\n  const url = axios.get(`${BASE_URL}/trending/movie/day?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getSearchMovie = query => {\n  const url = axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&query=${query}`\n  );\n  return url;\n};\n\nconst getMovieDetails = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieCast = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${USER_KEY}`);\n  return url;\n};\n\nconst getMovieReviews = id => {\n  const url = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${USER_KEY}`);\n  return url;\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovie,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  display: flex;\n  margin: 20px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 3px solid #8690ca;\n  border-radius: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin: 5px 0px 5px 20px;\n  text-transform: uppercase;\n  line-height: 1.3;\n  letter-spacing: 0.02em;\n`;\n\nexport const Text = styled.p`\n  line-height: 1.3;\n  letter-spacing: 0.02em;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieReviews } from 'Api/api';\nimport { Div, Item, Title, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieReviews(movieId)\n      .then(response => setReviews(response.data.results))\n      //   console.log(response.data.results)\n      // setReviews(response.data.results)\n      .catch(error => console.log(error.message))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>There is no any reviews for this movie.</p>;\n  }\n\n  return (\n    <Div>\n      {isLoading && <Loader />}\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{content}</Text>\n            </Item>\n          );\n        })}\n      </ul>\n    </Div>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","USER_KEY","getTrendingMovies","axios","getSearchMovie","query","getMovieDetails","id","getMovieCast","getMovieReviews","Div","styled","Item","Title","Text","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","then","response","data","results","catch","error","console","log","message","finally","length","Loader","map","author","content"],"sourceRoot":""}